[{"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\index.js":"1","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\reportWebVitals.js":"2","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\App.js":"3","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Wrap.js":"4","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\ProductPage.js":"5","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Card.js":"6","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Card2.js":"7","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\CardItem.js":"8","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Trello.js":"9","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\LifeCycleMethods.js":"10","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Employee.js":"11","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\NavigationBar.js":"12","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Posts.js":"13","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\PostItem.js":"14","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\PostView.js":"15","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Plugins.js":"16","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Hooks.js":"17","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Flickr.js":"18"},{"size":1010,"mtime":1609950252193,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":1612,"mtime":1610376401946,"results":"22","hashOfConfig":"20"},{"size":3038,"mtime":1607702494642,"results":"23","hashOfConfig":"20"},{"size":7839,"mtime":1608132377196,"results":"24","hashOfConfig":"20"},{"size":889,"mtime":1607697018809,"results":"25","hashOfConfig":"20"},{"size":1027,"mtime":1607529183349,"results":"26","hashOfConfig":"20"},{"size":611,"mtime":1607699015037,"results":"27","hashOfConfig":"20"},{"size":4684,"mtime":1608307742917,"results":"28","hashOfConfig":"20"},{"size":2445,"mtime":1608567074898,"results":"29","hashOfConfig":"20"},{"size":8923,"mtime":1608739546287,"results":"30","hashOfConfig":"20"},{"size":1258,"mtime":1610118765699,"results":"31","hashOfConfig":"20"},{"size":932,"mtime":1609776208616,"results":"32","hashOfConfig":"20"},{"size":354,"mtime":1609776208576,"results":"33","hashOfConfig":"20"},{"size":1169,"mtime":1609776984709,"results":"34","hashOfConfig":"20"},{"size":3050,"mtime":1609949677072,"results":"35","hashOfConfig":"20"},{"size":1162,"mtime":1610117241080,"results":"36","hashOfConfig":"20"},{"size":2541,"mtime":1610376836212,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"112h4p9",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\index.js",["80","81","82","83","84"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ProductPage from \"./components/ProductPage\";\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport \"lightgallery.js/dist/css/lightgallery.css\";\nimport 'react-modal-video/css/modal-video.min.css';\n\nimport Wrap from \"./components/Wrap\";\nimport Trello from \"./components/Trello\";\nimport LifeCycleMethods from \"./components/LifeCycleMethods\";\nimport Employee from \"./components/Employee\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["85","86"],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\reportWebVitals.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\App.js",["87","88","89","90"],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Wrap.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\ProductPage.js",["91"],"import React, {Component} from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter} from \"reactstrap\";\r\n\r\nimport {AvForm, AvField} from 'availity-reactstrap-validation'\r\n\r\nclass ProductPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            modalOpen: false,\r\n            selectedProductIndex: -1\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const changeModal = () => {\r\n            this.setState({modalOpen: !this.state.modalOpen})\r\n        }\r\n\r\n        const exampleForEach = () => {\r\n\r\n            var companies = [\"Apple\", \"Google\", \"PDP\", \"ECMA\", \"AIF\"];\r\n\r\n\r\n            companies.forEach((company, index) => {\r\n                if (index % 2 == 0) {\r\n                    console.log(company + \" \" + index);\r\n                }\r\n            })\r\n\r\n            // for (var i = 0; i < companies.length; i++){\r\n            //     console.log(companies[i]);\r\n            // }\r\n\r\n\r\n            var newCompany = companies.map((item, index) => {\r\n                return {name: item + \" Inc\", tel: \"+998934366331\"}\r\n            });\r\n\r\n            // var newCompany = companies.map((item, index) => ({name: item + \" Inc\", tel: \"+9989343656\"}));\r\n\r\n            console.log(newCompany);\r\n\r\n            var numbers = [233, 533, 653, -344, 533];\r\n\r\n            var newNumbers = numbers.filter((item) => item > 500);\r\n\r\n            // var newNumbers = numbers.filter((item) => {\r\n            //     return item > 500\r\n            // });\r\n\r\n            console.log(newNumbers);\r\n\r\n            numbers.sort((a, b) => {\r\n                return b - a\r\n            });\r\n\r\n            console.log(numbers)\r\n\r\n\r\n        }\r\n\r\n\r\n        const saveProduct = (hodisalar, qiymatlar) => {\r\n            console.log(qiymatlar);\r\n\r\n            // var temp = this.state.products;\r\n            // temp.push(qiymatlar)\r\n\r\n            // this.setState({products: temp})\r\n\r\n            // this.setState({products: [...this.state.products, qiymatlar]})\r\n\r\n\r\n            this.setState({products: this.state.products.concat(qiymatlar)});\r\n            console.log(this.state);\r\n\r\n            this.nizom && this.nizom.reset();\r\n\r\n\r\n        };\r\n\r\n\r\n        const deleteProduct = (index) => {\r\n\r\n            this.state.products.splice(index, 1);\r\n\r\n\r\n            this.setState({product: this.state.products});\r\n\r\n\r\n        }\r\n\r\n        const setSelectedProduct = (index) => {\r\n            this.setState({selectedProductIndex: index})\r\n        }\r\n\r\n        const editProduct = (event, values) => {\r\n\r\n            this.state.products.splice(this.state.selectedProductIndex, 1, values);\r\n\r\n\r\n            this.setState({products: this.state.products});\r\n            changeModal();\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Button color=\"success\" onClick={exampleForEach}>Click me!</Button>\r\n\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 offset-4 mt-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <AvForm onValidSubmit={saveProduct} ref={c => (this.nizom = c)}>\r\n                                        <AvField\r\n                                            type=\"text\"\r\n                                            name=\"productName\"\r\n                                            label=\"Product name\"\r\n                                            required\r\n                                            errorMessage=\"Bu maydon to'ldirilishi shart\"\r\n                                        />\r\n\r\n                                        <AvField\r\n                                            type=\"number\"\r\n                                            name=\"productPrice\"\r\n                                            label=\"Product price\"\r\n                                            required\r\n                                            errorMessage=\"Bu maydon to'ldirilishi shart\"\r\n                                        />\r\n\r\n                                        <AvField\r\n                                            type='color'\r\n                                            name=\"productColor\"\r\n                                            label=\"Product color\"\r\n                                            errorMessage=\"Bu maydon to'ldirilishi shart\"\r\n                                        />\r\n\r\n                                        <Button color=\"success\" className=\"d-block ml-auto mt-3\">Add</Button>\r\n\r\n\r\n                                    </AvForm>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.state.products.map((item, index) => (\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <h3>{item.productName}</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <p>Color: <b style={{color: item.productColor}}>{item.productColor}</b></p>\r\n                                            <p>Price: <b>{item.productPrice}</b></p>\r\n                                        </div>\r\n                                        <div className=\"card-footer\">\r\n                                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => {setSelectedProduct(index); changeModal()}}>Edit</button>\r\n                                            <button type=\"button\" className=\"btn btn-danger\"\r\n                                                    onClick={() => deleteProduct(index)}>Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <Modal isOpen={this.state.modalOpen} toggle={changeModal}>\r\n                    <AvForm onValidSubmit={editProduct} model={this.state.products[this.state.selectedProductIndex]}>\r\n                        <ModalBody>\r\n                            <AvField\r\n                                type=\"text\"\r\n                                name=\"productName\"\r\n                                label=\"Product name\"\r\n                                required\r\n                                errorMessage=\"Bu maydon to'ldirilishi shart\"\r\n                            />\r\n\r\n                            <AvField\r\n                                type=\"number\"\r\n                                name=\"productPrice\"\r\n                                label=\"Product price\"\r\n                                required\r\n                                errorMessage=\"Bu maydon to'ldirilishi shart\"\r\n                            />\r\n\r\n                            <AvField\r\n                                type='color'\r\n                                name=\"productColor\"\r\n                                label=\"Product color\"\r\n                                errorMessage=\"Bu maydon to'ldirilishi shart\"\r\n                            />\r\n\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" outline block>Edit</Button>\r\n                        </ModalFooter>\r\n                    </AvForm>\r\n                </Modal>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductPage;","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Card.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Card2.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\CardItem.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Trello.js",["92","93"],"import React, {Component} from 'react';\r\nimport './main.css';\r\n\r\nclass Trello extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isCardShow: false,\r\n            boards: [],\r\n            boardTitle: \"\",\r\n            selectedIndex: -1,\r\n            itemTitle: []\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const changeCardVisible = () => {\r\n            this.setState({isCardShow: !this.state.isCardShow})\r\n        }\r\n\r\n        const addBoard = () => {\r\n            if (this.state.selectedIndex >= 0){\r\n                this.state.boards[this.state.selectedIndex].title = this.state.boardTitle\r\n            } else {\r\n                this.state.boards.push({\r\n                    // title,\r\n                    title: this.state.boardTitle,\r\n                    items: []\r\n                });\r\n            }\r\n            changeCardVisible();\r\n            this.setState({boards: this.state.boards, boardTitle: \"\", selectedIndex: -1});\r\n        }\r\n\r\n        const deleteBoard = (index) => {\r\n            this.state.boards.splice(index, 1);\r\n            this.setState({boards: this.state.boards});\r\n        }\r\n\r\n        const handleChange = (e) => {\r\n            this.setState({boardTitle: e.target.value});\r\n        }\r\n\r\n        const editBoard = (index) => {\r\n            this.setState({boardTitle: this.state.boards[index].title, isCardShow: true, selectedIndex: index});\r\n\r\n        }\r\n\r\n        const handleItemChange = (e, index) => {\r\n            this.state.itemTitle[index] = e.target.value;\r\n            this.setState({itemTitle: this.state.itemTitle});\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-3\">\r\n                            <button type='button' onClick={changeCardVisible} className='btn btn-success'>Add board</button>\r\n\r\n                            <div className={`card mt-3 ${this.state.isCardShow ? '' : 'd-none'}`}>\r\n                                <div className=\"card-body\">\r\n                                    {/*<form onSubmit={addBoard}>*/}\r\n                                    <textarea value={this.state.boardTitle} className='form-control' onChange={handleChange} name='boardTitle' placeholder='Type here' />\r\n\r\n                                    <button type='button' onClick={addBoard} className={`btn mt-3 d-block ml-auto ${this.state.selectedIndex >= 0 ? \"btn-primary\" : \"btn-success\"}`}>{this.state.selectedIndex >= 0 ? \"Edit\" : \"Add\"}</button>\r\n                                    {/*</form>*/}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <div className=\"row\">\r\n                                {this.state.boards.map((item, index) => (\r\n                                    <div className=\"col-4 mb-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-header\">\r\n                                                <h5 onClick={() => editBoard(index)}>{item.title}</h5>\r\n                                                <div className=\"close\" onClick={() => deleteBoard(index)}>&times;</div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                {item.items.map((item2, index) => (\r\n                                                    <div className='task position-relative'>{item2} <div className=\"close\">&times;</div></div>\r\n                                                ))}\r\n                                            </div>\r\n                                            <div className=\"card-footer\">\r\n                                                {/*<form>*/}\r\n                                                    <textarea value={this.state.itemTitle[index]} onChange={(e) => handleItemChange(e, index)} className=\"form-control\"/>\r\n                                                    <button type='submit' className='btn btn-success mt-3 d-block ml-auto'>Add</button>\r\n                                                {/*</form>*/}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Trello;","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\LifeCycleMethods.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Employee.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\NavigationBar.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Posts.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\PostItem.js",["94"],"import React from 'react';\r\n\r\nconst PostItem = (props) => {\r\n    return (\r\n        <div className='card mt-3'>\r\n            <div className=\"card-body\">\r\n                <h6>{props.title} <a href=\"#\">more...</a></h6>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;","E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\PostView.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Plugins.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Hooks.js",[],"E:\\Frontend_learning\\pdp-learning\\lesson-29-react\\src\\components\\Flickr.js",["95"],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from \"axios\";\r\n// import ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Flickr = () => {\r\n\r\n    const [photos, setPhotos] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const apiKey = \"87c3b62bd2f2db79b9f548c15f7897e3\";\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=${apiKey}&per_page=24&format=json&nojsoncallback=1`)\r\n            .then((res) => {\r\n                setPhotos(res.data.photos.photo);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 offset-4 mt-3\">\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className='form-control' placeholder=\"Search here...\"/>\r\n                            <div className=\"input-group-append\">\r\n                                <button type='button' className='btn btn-success'>Search</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-8 offset-2 mt-4\">\r\n                        <ul className=\"nav nav-justified\">\r\n                            <li className='nav-item'><Link className='nav-link' to='/flickr/mountain'>Mountain</Link></li>\r\n                            <li className='nav-item'><Link className='nav-link' to='/flickr/beaches'>Beaches</Link></li>\r\n                            <li className='nav-item'><Link className='nav-link' to='/flickr/birds'>Birds</Link></li>\r\n                            <li className='nav-item'><Link className='nav-link' to='/flickr/food'>Food</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-4\">\r\n                    {/*<ClipLoader color=\"#fffffff\" loading={loading} size={150} />*/}\r\n                    {photos.map((item) => (\r\n                        <div className='col-4 mb-3'>\r\n                            <img className='w-100' src={`https://farm${item.farm}.staticflickr.com/${item.server}/${item.id}_${item.secret}_m.jpg`} alt=\"\"/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Flickr;",{"ruleId":"96","severity":1,"message":"97","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":19},{"ruleId":"96","severity":1,"message":"100","line":16,"column":8,"nodeType":"98","messageId":"99","endLine":16,"endColumn":12},{"ruleId":"96","severity":1,"message":"101","line":17,"column":8,"nodeType":"98","messageId":"99","endLine":17,"endColumn":14},{"ruleId":"96","severity":1,"message":"102","line":18,"column":8,"nodeType":"98","messageId":"99","endLine":18,"endColumn":24},{"ruleId":"96","severity":1,"message":"103","line":19,"column":8,"nodeType":"98","messageId":"99","endLine":19,"endColumn":16},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"96","severity":1,"message":"108","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":12},{"ruleId":"96","severity":1,"message":"109","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":13},{"ruleId":"96","severity":1,"message":"110","line":4,"column":9,"nodeType":"98","messageId":"99","endLine":4,"endColumn":18},{"ruleId":"96","severity":1,"message":"111","line":4,"column":20,"nodeType":"98","messageId":"99","endLine":4,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":31,"column":31,"nodeType":"114","messageId":"115","endLine":31,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":27,"column":17,"nodeType":"118","endLine":27,"endColumn":60},{"ruleId":"116","severity":1,"message":"117","line":54,"column":13,"nodeType":"118","endLine":54,"endColumn":33},{"ruleId":"119","severity":1,"message":"120","line":7,"column":40,"nodeType":"121","endLine":7,"endColumn":52},{"ruleId":"96","severity":1,"message":"122","line":9,"column":12,"nodeType":"98","messageId":"99","endLine":9,"endColumn":19},"no-unused-vars","'ProductPage' is defined but never used.","Identifier","unusedVar","'Wrap' is defined but never used.","'Trello' is defined but never used.","'LifeCycleMethods' is defined but never used.","'Employee' is defined but never used.","no-native-reassign",["123"],"no-negated-in-lhs",["124"],"'Card' is defined but never used.","'Card2' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]